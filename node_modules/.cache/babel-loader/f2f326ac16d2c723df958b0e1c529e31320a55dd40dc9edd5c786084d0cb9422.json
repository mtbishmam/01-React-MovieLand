{"ast":null,"code":"var _jsxFileName = \"/Users/mtbishmam/Code/Practice/01-react-movieland/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport SearchIcon from \"./search.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://www.omdbapi.com?apikey=4a78df0b\";\nconst App = () => {\n  _s();\n  const searchMovie = async title => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n  };\n  useEffect(() => {\n    searchMovie(\"Naruto\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieLand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search for movies\",\n        value: \"Naurto\",\n        onChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","SearchIcon","jsxDEV","_jsxDEV","API_URL","App","_s","searchMovie","title","response","fetch","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","src","alt","_c","$RefreshReg$"],"sources":["/Users/mtbishmam/Code/Practice/01-react-movieland/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nimport \"./App.css\";\nimport SearchIcon from \"./search.svg\";\n\nconst API_URL = \"http://www.omdbapi.com?apikey=4a78df0b\";\n\nconst App = () => {\n  const searchMovie = async (title) => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n  };\n\n  useEffect(() => {\n    searchMovie(\"Naruto\");\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <h1>MovieLand</h1>\n\n      <div className=\"search\">\n        <input\n          placeholder=\"Search for movies\"\n          value=\"Naurto\"\n          onChange={() => {}}\n        />\n        <img src={SearchIcon} alt=\"Search\" />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAG,wCAAwC;AAExD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,OAAQ,MAAKI,KAAM,EAAC,CAAC;IACrD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACpC,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdO,WAAW,CAAC,QAAQ,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBX,OAAA;MAAAW,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElBf,OAAA;MAAKU,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBX,OAAA;QACEgB,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAC,QAAQ;QACdC,QAAQ,EAAEA,CAAA,KAAM,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFf,OAAA;QAAKmB,GAAG,EAAErB,UAAW;QAACsB,GAAG,EAAC;MAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAxBID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA0BT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}